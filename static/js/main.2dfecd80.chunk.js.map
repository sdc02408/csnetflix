{"version":3,"sources":["static/star.png","components/Config.js","_actions/user_action.js","_actions/types.js","components/views/commons/SetButton.js","components/views/commons/Modal.js","components/views/commons/Movie.js","container/Netflix.js","components/views/LandingPage/Sections/MainPageBtn.js","components/views/LandingPage/Sections/MainImage.js","container/TopRated.js","components/views/commons/Poster.js","container/TrendContainer.js","components/views/LandingPage/Sections/MiddleSection.js","container/NewMovies.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","hoc/auth.js","components/views/SearchPage/SearchPage.js","components/views/NavBar/Sections/LeftMenu.js","container/SearchInput.js","components/views/NavBar/Sections/Alarm.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/FavoritePage/FavoritePage.js","components/App.js","serviceWorker.js","_reducers/user_reducer.js","_reducers/index.js","index.js"],"names":["module","exports","API_KEY","fetchNetFlix","dispatch","axios","get","then","response","type","data","catch","error","auth","payload","SetButton","props","movieId","movieTitle","moviePost","userFrom","useState","Favorited","setFavorited","variables","userForm","useEffect","Axios","post","success","favorited","alert","style","display","size","color","borderRadius","paddingLeft","paddingRight","fontWeight","marginRight","CaretRightOutlined","fontSize","onClick","backgroundColor","border","CheckOutlined","PlusOutlined","Modalpage","className","width","position","background","backdrop_path","height","backgroundSize","id","name","title","vote_average","first_air_date","overview","poster_path","localStorage","getItem","Movie","modal","setModal","src","alt","PlayCircleFilled","Star","substr","release_date","DownOutlined","maskClosable","visible","centered","closeIcon","bodyStyle","onCancel","CloseOutlined","float","right","zIndex","top","Modal","Netflix","useDispatch","netflixData","useSelector","state","netflix","movies","marginBottom","dots","infinite","speed","slidesToShow","slidesToScroll","responsive","breakpoint","settings","initialSlide","alignItems","results","map","movie","key","MainPageBtn","InfoCircleOutlined","MainImage","image","backgroundPosition","maxWidth","marginLeft","margin","textAlign","textShadow","lineHeight","marginTop","text","TopRated","topRatedData","toprated","topmovies","Poster","SoundFilled","HeartOutlined","TrendContainer","TrendData","trending","MiddleSection","left","Width","titles","texts","NewMovies","newMovieData","newmovie","newMovie","console","log","LandingPage","MainMovieImage","setMainMovieImage","MiddleMovieImage","setMiddleMovieImage","endpoint","fetchMovies","fetch","json","Title","Typography","withRouter","rememberMeChecked","formErrorMessage","setFormErrorMessage","rememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","loginUser","loginSuccess","window","setItem","userId","removeItem","history","push","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","level","Item","prefix","UserOutlined","placeholder","value","onChange","onBlur","LockOutlined","padding","htmlType","minWidth","disabled","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","lastName","confirmPassword","oneOf","lastname","moment","unix","registerUser","errmsg","label","hasFeedback","validateStatus","ComposedClass","reload","adminRoute","AuthenticationCheck","user","isAuth","isAdmin","SearchPage","LeftMenu","mode","href","SearchInput","useHistory","search","setSearch","lists","setLists","movieLists","setMovieLists","url","a","e","target","SearchOutlined","gutter","Alarm","Content","filter","person","index","placement","content","trigger","BellOutlined","userData","icon","status","NavBar","setVisible","scrolling","setScrolling","addEventListener","scrollY","BarsOutlined","closable","onClose","FavoritePage","Favorites","setFavorites","fetchFavoredMovie","favorites","favoritea","App","paddingTop","minHeight","exact","path","component","Auth","LoginPage","RegisterPage","Boolean","location","hostname","match","action","register","rootReducer","combineReducers","trendingReducer","topratedReducer","netflixReducer","newmovieReducer","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById"],"mappings":"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","file":"static/js/main.2dfecd80.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/star.69c7de72.png\";","//SERVER ROUTES\r\nexport const USER_SERVER = '/api/users';\r\n//movie\r\nexport const API_URL = 'https://api.themoviedb.org/3/';\r\nexport  const IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/'\r\nexport const API_KEY ='e46295cf14fbe0fe235a340504d8938a';\r\n","import axios from 'axios';\nimport {API_KEY} from '../components/Config'\nimport {\n  LOGIN_USER,\n  REGISTER_USER,\n  AUTH_USER,\n  FETCH_TRENDING,\n  FETCH_TOPRATED,\n  FETCH_NETFLIX,\n  FETCH_NEWMOVIE\n} from './types';\n\n//액션 생성 함수 만들기 ,  data는 파라미터. 파라미터는 액션 객체 안에 추가 필드로 들어간다.\nexport const fetchTrendData = (data) => {\n  return {\n    type:FETCH_TRENDING,\n    data,\n  }\n}\n\nexport const fetchTrending = () => {\n    return (dispatch) => {\n      return axios.get(`https://api.themoviedb.org/3/trending/all/week?api_key=${API_KEY}&language=ko`)\n      .then(response => {\n        dispatch(fetchTrendData(response.data))\n        \n      })\n      \n      .catch(error => {\n        throw(error);\n      })\n    }\n}\n\nexport const fetchNewMovieData = (data) => {\n  return {\n    type:FETCH_NEWMOVIE,\n    data,\n  }\n}\n\nexport const fetchNewMovie = () => {\n  return (dispatch) => {\n    return axios.get(`https://api.themoviedb.org/3/movie/now_playing?api_key=${API_KEY}&language=ko`)\n    .then(response => {\n      dispatch(fetchNewMovieData(response.data))\n    })\n    .catch(error => {\n      throw(error);\n    })\n  }\n}\n\n\nexport const fetchTopRatedData = (data) => {\n  return {\n    type: FETCH_TOPRATED,\n    data,\n  }\n}\n\nexport const fetchTopRated = () => {\n  return (dispatch) => {\n    return axios.get(`https://api.themoviedb.org/3/movie/top_rated?api_key=${API_KEY}&language=ko`)\n    .then(response => {\n      dispatch(fetchTopRatedData(response.data))\n    })\n    .catch(error => {\n      throw(error);\n    })\n  }\n}\n\nexport const fetchNetFlixData = (data) => {\n  return {\n    type: FETCH_NETFLIX,\n    data,\n  }\n}\n\nexport const fetchNetFlix =() => {\n  return (dispatch) => {\n    return axios.get(`https://api.themoviedb.org/3/discover/tv?&api_key=${API_KEY}&with_networks=213&language=ko`)\n    .then(response => {\n      dispatch(fetchNetFlixData(response.data))\n      \n    })\n    .catch(error => {\n      throw(error);\n    })\n  }\n}\n\nexport function loginUser (dataToSubmit) {\n  const request = axios.post('/api/users/login', dataToSubmit)\n  .then(response =>response.data)\n  // 서버에다가 request 날린다음 data로 받아.\n  return{\n    // request를 리듀서에 넘겨주는거\n  type: LOGIN_USER,\n  payload: request\n  }\n}\n\nexport function registerUser (dataToSubmit) {\n  const request = axios.post('/api/users/register', dataToSubmit)\n  .then(response =>response.data)\n  // 서버에다가 request 날린다음 data로 받아.\n  \n  return{\n    // request를 리듀서에 넘겨주는거\n    type: REGISTER_USER,\n    payload: request\n  }\n}\n\nexport function auth () {\n  const request = axios.get('/api/users/auth')\n  .then(response =>response.data)\n  // 서버에다가 request 날린다음 data로 받아.\n  return{\n    // request를 리듀서에 넘겨주는거\n    type: AUTH_USER,\n    payload: request\n  }\n}\n\n","export const LOGIN_USER =\"login_user\";\nexport  const REGISTER_USER =\"register_user\";\nexport const AUTH_USER = \"auth_user\";\nexport const FETCH_TRENDING = 'fetch_trending';\nexport const FETCH_TOPRATED = 'fetch_toprated';\nexport const FETCH_NETFLIX = 'fetch_netflix';\nexport const FETCH_NEWMOVIE = 'fetch_newmovie'\n\n","import React,{ useEffect, useState } from 'react'\r\nimport { Button } from 'antd'\r\nimport { CaretRightOutlined, InfoCircleOutlined,PlusOutlined,CheckOutlined  } from '@ant-design/icons'\r\nimport Axios from 'axios'\r\nconst SetButton = (props) =>{\r\n  \r\n  // movie에서 받아온 정보들\r\n  const movieId=props.movieId\r\n  const movieTitle=props.movieTitle\r\n  const moviePost=props.moviePost\r\n  const userFrom=props.userFrom\r\n  \r\n  const [Favorited, setFavorited] = useState(false)\r\n  \r\n  let variables = {\r\n    userForm: userFrom,\r\n    movieId: movieId,\r\n    movieTitle:movieTitle,\r\n    moviePost:moviePost\r\n  }\r\n  \r\n  useEffect(() =>{\r\n    \r\n    // Axios.post('/api/favorite/favoriteNumber', variables )\r\n    // .then(response =>{\r\n    //   setFavoriteNumber(response.data.favoriteNumber)\r\n    //\r\n    //   if(response.data.success){\r\n    //   }else{\r\n    //     alert('숫자 정볼를 가져오는데 실패 했습니다.')\r\n    //   }\r\n    // })\r\n    \r\n    Axios.post('/api/favorite/favorited', variables )\r\n    .then(response =>{\r\n      if(response.data.success){\r\n        setFavorited(response.data.favorited)\r\n        \r\n      }else{\r\n        alert('정보를 가져오는데 실패했습니다')\r\n      }\r\n    })\r\n  })\r\n  \r\n  \r\n  const onClickFavorite = () => {\r\n    \r\n    if(Favorited){\r\n      Axios.post('/api/favorite/removeFromFavorite',variables )\r\n      .then(response => {\r\n        if(response.data.success) {\r\n \r\n          setFavorited(!Favorited)\r\n        } else{\r\n          alert('내가 찜한 콘텐츠에서 삭제되었습니다.')\r\n        }\r\n      })\r\n      \r\n    } else{\r\n      Axios.post('/api/favorite/addToFavorite',variables )\r\n      .then(response => {\r\n        if(response.data.success) {\r\n          setFavorited(!Favorited)\r\n        } else{\r\n          alert('FavoritePage 리스트에서 추가하는걸 실패했습니다.')\r\n        }\r\n      })\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <>\r\n  \r\n      <div style={{display:'flex'}}>\r\n        <Button size=\"large\" style={{color:'#181818',borderRadius:'0.3rem', paddingLeft:'calc(3.6rem / 2)', paddingRight:'calc(3.6rem / 2)', fontWeight:'bold',marginRight:'1rem' }}>\r\n          <CaretRightOutlined style={{fontSize:'20px',color:'#181818', fontWeight:'bold'}} />\r\n          재생</Button>\r\n        <Button size=\"large\" onClick={onClickFavorite}\r\n                style={{borderRadius:'0.3rem', paddingLeft:'calc(3.6rem / 2)', paddingRight:'calc(3.6rem / 2)',\r\n                  fontWeight:'bold',marginRight:'1rem',backgroundColor:'rgba(133,133,133,0.6)', color:'white',border:'unset'}}>\r\n     \r\n          {Favorited ? <CheckOutlined style={{fontSize:'20px'}} /> : <PlusOutlined  style={{fontSize:'20px'}} />}내가 찜한 콘텐츠</Button>\r\n  \r\n      </div>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default SetButton\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nimport SetButton from './SetButton'\r\n\r\nimport '../../../static/sass/components/modal.scss'\r\n\r\nfunction Modalpage (props) {\r\n  \r\n  return (\r\n    <>\r\n        <div className=\"mainmodal\"\r\n             style={{\r\n               width: '100%', position: 'relative',\r\n               background: `url('https://image.tmdb.org/t/p/original/${props.backdrop_path}')`,\r\n               height: '500px',\r\n               backgroundSize: ' cover',\r\n             }}>\r\n\r\n          <div className=\"modalLeft\">\r\n            <div className=\"modalInfo\">\r\n              <p id={'modaltitle'}>{props.name}{props.title}</p>\r\n\r\n              <div className={'subinfo'}>\r\n                <span className={'modalaverage'}>평점 {props.vote_average}</span>\r\n                <span className={'modalfirstdate'}>개봉일 {props.first_air_date}</span>\r\n              </div>\r\n\r\n              <p id={'modaloverview'}>{props.overview}</p>\r\n\r\n              <SetButton\r\n                movieId={props.id}\r\n                movieTitle={props.name}\r\n                moviePost={props.poster_path}\r\n                userFrom={localStorage.getItem('userId')}/>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      \r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Modalpage\r\n","import React, { useState } from 'react'\r\nimport {\r\n  DownOutlined,\r\n  CloseOutlined,\r\n  HeartOutlined,\r\n  LikeOutlined,\r\n  DislikeOutlined,\r\n  PlayCircleFilled,\r\n} from '@ant-design/icons'\r\nimport {Modal} from 'antd'\r\nimport '../../../static/sass/components/Movie.scss'\r\nimport Star from '../../../static/star.png'\r\nimport Modalpage from './Modal'\r\n\r\nconst Movie = (props) => {\r\n  const [modal, setModal] = useState(false)\r\n  \r\n  const showModal = () => {\r\n    setModal(true)\r\n  }\r\n  \r\n  const closeModal = () => {\r\n    setModal(false)\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <div className=\"movie\">\r\n        \r\n        <img style={{ width: '98%' }} src={`https://image.tmdb.org/t/p/original/${props.props.backdrop_path}`}\r\n             alt={props.props.id}/>\r\n        \r\n        <PlayCircleFilled className=\"playBtn\"/>\r\n        <p className=\"detailTitle\">{props.props.name}{props.props.title}</p>\r\n        <img src={Star} className=\"voteStart\"/>\r\n        <p className=\"detailVoteAverage\">{props.props.vote_average}</p>\r\n        <p className=\"releaseDateText\">개봉연도</p>\r\n        {props.props.first_air_date &&\r\n        <p className=\"releaseDate\">{props.props.first_air_date.substr(0, 4)}</p>\r\n        }\r\n        {props.props.release_date &&\r\n        <p className=\"releaseDate\">{props.props.release_date.substr(0, 4)}</p>\r\n        }\r\n       \r\n        {/*<LikeOutlined className=\"likeBtn\"/>*/}\r\n        {/*<DislikeOutlined className=\"dislikeBtn\"/>*/}\r\n        {/*<HeartOutlined className=\"plusBtn\"/>*/}\r\n       \r\n        <DownOutlined className=\"detailIcon\" onClick={showModal} style={{ fontSize: '20px' }}></DownOutlined>\r\n      </div>\r\n  \r\n      \r\n      \r\n      <Modal\r\n        maskClosable={false}\r\n        visible={modal}\r\n        centered\r\n        closeIcon={<DownOutlined/>}\r\n        bodyStyle={{ width: '100%', height: 'auto', display: 'flex' }}\r\n        onCancel={false}\r\n      >\r\n        <CloseOutlined style={{\r\n          color: 'white', float: 'right', fontSize: '20px',\r\n          position: 'absolute', right: '35px', zIndex: '200', top: '35px',\r\n        }} className=\"closeBtn\" onClick={() => closeModal()}/>\r\n        \r\n      <Modalpage\r\n        backdrop_path={props.props.backdrop_path}\r\n        name={props.props.name}\r\n        title={props.props.title}\r\n        vote_average={props.props.vote_average}\r\n        first_air_date={props.props.first_air_date}\r\n        overview={props.props.overview}\r\n        id={props.props.id}\r\n        name={props.props.name}\r\n        poster_path={props.props.poster_path}\r\n      />\r\n      </Modal>\r\n      \r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Movie\r\n","import React, { useEffect, useState } from 'react'\r\nimport { fetchNetFlix } from '../_actions/user_action'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Movie from '../components/views/commons/Movie'\r\nimport Slider from 'react-slick'\r\nimport 'slick-carousel/slick/slick.css'\r\nimport 'slick-carousel/slick/slick-theme.css'\r\nimport '../static/sass/components/CsSlider.scss'\r\nimport {LeftOutlined ,RightOutlined  } from '@ant-design/icons'\r\n\r\nconst Netflix = (props) => {\r\n  const settings = {\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 6,\r\n    slidesToScroll: 6,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: 3,\r\n          slidesToScroll: 3,\r\n          infinite: true,\r\n          dots: true\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 2,\r\n          initialSlide: 2\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1\r\n        }\r\n      }\r\n    ]\r\n  }\r\n  \r\n\r\n  \r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n\r\n    dispatch(fetchNetFlix())\r\n\r\n  }, [])\r\n\r\n  const netflixData = useSelector(state => state.netflix.movies, []) || []\r\n \r\n  return (\r\n    <div className=\"sliders\" >\r\n      <p style={{color:'#ffffff', fontSize:'1.7rem',position:'relative', top:'30px',fontWeight:\"bold\",marginBottom:'0'}}>Netflix 인기 컨텐츠</p>\r\n      <Slider {...settings} className=\"csslider\" style={{display:'flex',alignItems:'center'}}\r\n              >\r\n\r\n        {netflixData.results && netflixData.results.map(movie => (\r\n          <Movie props={movie} key={movie.id}/>\r\n        ))}\r\n\r\n      </Slider>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Netflix\r\n","import React from 'react'\r\nimport { Button } from 'antd'\r\nimport { CaretRightOutlined, InfoCircleOutlined } from '@ant-design/icons'\r\n\r\nconst MainPageBtn = (props) =>{\r\n  \r\n  return (\r\n    <>\r\n  \r\n      <div style={{display:'flex'}}>\r\n        <Button size=\"large\" style={{color:'#181818',borderRadius:'0.3rem', paddingLeft:'calc(3.6rem / 2)', paddingRight:'calc(3.6rem / 2)', fontWeight:'bold',marginRight:'1rem' }}>\r\n          <CaretRightOutlined style={{fontSize:'20px',color:'#181818', fontWeight:'bold'}} />\r\n          재생</Button>\r\n        <Button size=\"large\"\r\n                style={{borderRadius:'0.3rem', paddingLeft:'calc(3.6rem / 2)', paddingRight:'calc(3.6rem / 2)',\r\n                  fontWeight:'bold',marginRight:'1rem',backgroundColor:'rgba(133,133,133,0.6)', color:'white',border:'unset'}}>\r\n          <InfoCircleOutlined style={{fontSize:'20px'}} />\r\n          상세보기</Button>\r\n      </div>\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainPageBtn\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport MainPageBtn from './MainPageBtn'\r\nimport { Button, Modal } from 'antd'\r\nimport { CaretRightOutlined, InfoCircleOutlined } from '@ant-design/icons'\r\n\r\nfunction MainImage (props) {\r\n  \r\n  return (\r\n    <>\r\n      <div style={{\r\n        background: `linear-gradient(to top, rgba(0,0,0,0)\r\n        39%,rgba(0,0,0,0)\r\n        41%,rgba(0,0,0,0.65)\r\n        100%),\r\n        url('${props.image}'), #1c1c1c`,\r\n        height: '100vh',\r\n        backgroundSize: '100%, cover',\r\n        backgroundPosition: 'center, center',\r\n        width: '100%',\r\n        position: 'absolute',\r\n        zIndex: '0',\r\n      }}>\r\n      \r\n      \r\n      </div>\r\n      \r\n      <div style={{ position: 'relative', maxWidth: '40%', top: '16rem', marginLeft: '60px', height: '90vh' }}>\r\n        <p style={{\r\n          color: 'white',\r\n          fontSize: '4.5em',\r\n          margin: '0 auto',\r\n          textAlign: 'left',\r\n          textShadow: '2px 2px 4px rgba(0, 0, 0, 0.45)',\r\n        }}>{props.title}</p>\r\n        <p style={{\r\n          color: 'white', fontSize: '1.4rem',\r\n          fontWeight: 'normal',\r\n          lineHeight: 'normal',\r\n          width: '100%',\r\n          textShadow: '2px 2px 4px rgba(0, 0, 0, 0.45)',\r\n          marginTop: '.1vw',\r\n        }}>{props.text}</p>\r\n  \r\n  \r\n   <MainPageBtn />\r\n      \r\n      </div>\r\n  \r\n  \r\n\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainImage\r\n","import React, { useEffect, useState } from 'react'\r\nimport { fetchTopRated } from '../_actions/user_action'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Movie from '../components/views/commons/Movie'\r\nimport Slider from 'react-slick'\r\nimport 'slick-carousel/slick/slick.css'\r\nimport 'slick-carousel/slick/slick-theme.css'\r\nimport '../static/sass/components/CsSlider.scss'\r\n\r\nconst TopRated = (props) => {\r\n  const settings = {\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 6,\r\n    slidesToScroll: 6,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: 3,\r\n          slidesToScroll: 3,\r\n          infinite: true,\r\n          dots: true\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 2,\r\n          initialSlide: 2\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1\r\n        }\r\n      }\r\n    ]\r\n  }\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTopRated())\r\n  }, [])\r\n\r\n  const topRatedData = useSelector(state => state.toprated.topmovies,[]) || [];\r\n\r\n  return (\r\n    <div className=\"sliders\" >\r\n      <p style={{color:'#ffffff', fontSize:'1.7rem',position:'relative', top:'30px',fontWeight:\"bold\",marginBottom:'0'}}>TOP20</p>\r\n      <Slider {...settings} className=\"csslider\" style={{display:'flex',alignItems:'center'}}>\r\n\r\n        {topRatedData.results && topRatedData.results.map(movie => (\r\n          <Movie props={movie} key={movie.id}/>\r\n        ))}\r\n\r\n      </Slider>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TopRated\r\n","import React, { useState } from 'react'\r\nimport { CloseOutlined, DownOutlined, HeartOutlined, PlayCircleFilled, SoundFilled } from '@ant-design/icons'\r\nimport { Modal } from 'antd'\r\nimport '../../../static/sass/components/Poster.scss'\r\nimport Star from '../../../static/star.png'\r\nimport Modalpage from '../commons/Modal'\r\n\r\nconst Poster = (props) => {\r\n\r\n  const [modal, setModal] = useState(false)\r\n\r\n  const showModal = () => {\r\n    setModal(true)\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setModal(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"postermovie\">\r\n\r\n        <img style={{ width: '98%' }} src={`https://image.tmdb.org/t/p/original/${props.props.poster_path}`}\r\n             alt={props.props.id}/>\r\n\r\n        <PlayCircleFilled className=\"playBtn\"/>\r\n        <p className=\"detailTitle\" >{props.props.title}{props.props.name}</p>\r\n        <img src={Star} className=\"voteStart\"/>\r\n        <p className=\"detailVoteAverage\" >{props.props.vote_average}</p>\r\n        <p className=\"releaseDateText\">개봉연도</p>\r\n\r\n        {props.props.first_air_date &&\r\n        <p className=\"releaseDate\">{props.props.first_air_date.substr(0,4)}</p>\r\n        }\r\n        \r\n        {props.props.release_date &&\r\n        <p className=\"releaseDate\">{props.props.release_date.substr(0,4)}</p>\r\n        }\r\n        \r\n        <SoundFilled className=\"soundBtn\"/>\r\n        <HeartOutlined className=\"plusBtn\"/>\r\n        <DownOutlined className=\"detailIcon\" onClick={showModal} style={{ fontSize: '20px' }}></DownOutlined>\r\n      </div>\r\n\r\n      <Modal\r\n        maskClosable={false}\r\n        visible={modal}\r\n        centered\r\n        closeIcon={<DownOutlined/>}\r\n        bodyStyle={{ width: '100%', height: 'auto', display: 'flex' }}\r\n        onCancel={false}\r\n      >\r\n        <CloseOutlined style={{\r\n          color: 'white', float: 'right', fontSize: '20px',\r\n          position: 'absolute', right: '35px', zIndex: '200', top: '35px',\r\n        }} onClick={() => closeModal()}/>\r\n  \r\n        <Modalpage\r\n          backdrop_path={props.props.backdrop_path}\r\n          name={props.props.name}\r\n          title={props.props.title}\r\n          vote_average={props.props.vote_average}\r\n          first_air_date={props.props.first_air_date}\r\n          overview={props.props.overview}\r\n          id={props.props.id}\r\n          name={props.props.name}\r\n          poster_path={props.props.poster_path}\r\n        />\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Poster\r\n","import React, { useEffect, useState } from 'react'\r\nimport { fetchTrending } from '../_actions/user_action'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Poster from '../components/views/commons/Poster'\r\nimport Slider from 'react-slick'\r\nimport 'slick-carousel/slick/slick.css'\r\nimport 'slick-carousel/slick/slick-theme.css'\r\nimport '../static/sass/components/Poster.scss'\r\n\r\n//컴포넌트를 리덕스와 연동하려면 connect 함수가 필요해. connect(mapStateToProps, mapDispatchToProps)(연동 컴포넌트)\r\n\r\nconst TrendContainer = (props) => {\r\n  const settings = {\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 6,\r\n    slidesToScroll: 6,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: 3,\r\n          slidesToScroll: 3,\r\n          infinite: true,\r\n          dots: true\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 2,\r\n          initialSlide: 2\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1\r\n        }\r\n      }\r\n    ]\r\n  }\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTrending());\r\n  }, []);\r\n\r\n        //결과                   // 상태 선택함수\r\n  const TrendData = useSelector(state => state.trending.trending, []) || [];\r\n\r\n\r\n  return (\r\n    <div className=\"sliderss\" >\r\n      <p style={{color:'#ffffff', fontSize:'1.7rem',position:'relative', top:'30px',fontWeight:\"bold\",marginBottom:'0'}}>몰아보기 추천</p>\r\n      <Slider {...settings} className=\"csslider\" style={{display:'flex',alignItems:'center'}}>\r\n\r\n        {TrendData.results && TrendData.results.map(movie => (\r\n          <Poster props={movie} key={movie.id}/>\r\n        ))}\r\n\r\n      </Slider>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TrendContainer\r\n","import React from 'react'\r\nimport MainPageBtn from './MainPageBtn'\r\n\r\nfunction MiddleSection (props) {\r\n  return (\r\n    <div >\r\n    <div style={{\r\n      background: `linear-gradient(rgba(0,0,0,0.8),rgba(0,0,0,0.8)),\r\n        url('${props.image}'), #1c1c1c`,\r\n      height: '80vh',\r\n      backgroundSize:'100%, cover',\r\n      backgroundPosition:'center, center',\r\n      width:'100%',\r\n      position:'relative',\r\n      margin:'35px 0'\r\n    }} >\r\n    \r\n    <img src={props.image} style={{width:'40%',position:'absolute',top:'30%',left:'5%'}}/>\r\n  \r\n    \r\n    \r\n      <div style={{position:'absolute', Width:'40%', top:'30%', left:'50%'}}>\r\n        <p style={{color:'white', fontSize:'70px', margin:'0 auto',textAlign:'left',textShadow: '2px 2px 4px rgba(0, 0, 0, 0.45)',}}>{props.titles}</p>\r\n  \r\n        <MainPageBtn />\r\n       \r\n        <p style={{color:'white', fontSize:'1.2rem',\r\n          fontWeight: 'normal',\r\n          lineHeight: 'normal',\r\n          width: '80%',\r\n          textShadow: '2px 2px 4px rgba(0, 0, 0, 0.45)',\r\n          marginTop: '5vw',\r\n        }}>{props.texts}</p>\r\n    \r\n\r\n      </div>\r\n    \r\n   \r\n    \r\n    </div>\r\n    \r\n</div>\r\n\r\n\r\n\r\n)\r\n}\r\n\r\nexport default MiddleSection\r\n","import React, { useEffect, useState } from 'react'\r\nimport { fetchNewMovie } from '../_actions/user_action'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Movie from '../components/views/commons/Movie'\r\nimport Slider from 'react-slick'\r\nimport 'slick-carousel/slick/slick.css'\r\nimport 'slick-carousel/slick/slick-theme.css'\r\nimport '../static/sass/components/CsSlider.scss'\r\n\r\nconst NewMovies = (props) => {\r\n  const settings = {\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 6,\r\n    slidesToScroll: 6,\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: {\r\n          slidesToShow: 3,\r\n          slidesToScroll: 3,\r\n          infinite: true,\r\n          dots: true\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: {\r\n          slidesToShow: 2,\r\n          slidesToScroll: 2,\r\n          initialSlide: 2\r\n        }\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: {\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1\r\n        }\r\n      }\r\n    ]\r\n  }\r\n  const dispatch = useDispatch()\r\n  \r\n  useEffect(() => {\r\n    \r\n    dispatch(fetchNewMovie())\r\n    \r\n  }, [])\r\n  \r\n  const newMovieData = useSelector(state => state.newmovie.newMovie, []) || []\r\n  console.log(newMovieData,\"new\")\r\n  \r\n  return (\r\n    <div className=\"sliders\" >\r\n      <p style={{color:'#ffffff', fontSize:'1.7rem',position:'relative', top:'30px',fontWeight:\"bold\",marginBottom:'0'}}>상영중인 영화</p>\r\n      <Slider {...settings} className=\"csslider\" style={{display:'flex',alignItems:'center'}}>\r\n        \r\n        {newMovieData.results && newMovieData.results.map(movie => (\r\n          movie.backdrop_path ?\r\n          <Movie props={movie} key={movie.id}/> : null\r\n        ))}\r\n      \r\n      </Slider>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewMovies\r\n","import React,{useState,useEffect} from 'react';\n// import Layout from '../../../container/Layout'\nimport Netflix from '../../../container/Netflix'\nimport {API_KEY,API_URL,IMAGE_BASE_URL} from '../../Config'\nimport MainImage from './Sections/MainImage'\nimport TopRated from '../../../container/TopRated'\nimport TrendContainer from '../../../container/TrendContainer'\n\nimport MiddleSection from './Sections/MiddleSection'\nimport NewMovies from '../../../container/NewMovies'\n\n\nfunction LandingPage (props) {\n  \n  const [MainMovieImage, setMainMovieImage] = useState(null)\n  const [MiddleMovieImage, setMiddleMovieImage] = useState(null)\n  \n  useEffect(() => {\n    const endpoint = `https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&with_networks=213&language=ko&include_adult=false`\n    fetchMovies(endpoint)\n  }, [])\n\n  const fetchMovies = (endpoint) => {\n    fetch(endpoint)\n    .then(response => response.json())\n    .then(response => {\n      setMainMovieImage(response.results[5])\n      setMiddleMovieImage(response.results[9])\n      // console.log(\"main\",response.results[1])\n    })\n  }\n\n  return (\n      <div style={{width:'100%', margin:'0'}}>\n\n        {MainMovieImage &&\n        <MainImage\n          image={`${IMAGE_BASE_URL}w1280${MainMovieImage.backdrop_path}`}\n          title={MainMovieImage.name}\n          text={MainMovieImage.overview}\n        />\n        }\n      \n      <Netflix />\n      <TrendContainer />\n      <TopRated />\n      \n        {MiddleMovieImage &&\n        <MiddleSection\n          image={`${IMAGE_BASE_URL}w1280${MiddleMovieImage.backdrop_path}`}\n          titles={MiddleMovieImage.name}\n          texts={MiddleMovieImage.overview}\n        />\n        }\n  \n        <TopRated />\n        <NewMovies />\n        \n      </div>\n  )\n}\n\nexport default LandingPage\n","import React, { useState } from 'react'\nimport Axios from 'axios'\nimport {useDispatch} from 'react-redux'\nimport {loginUser} from '../../../_actions/user_action';\nimport {withRouter } from 'react-router-dom';\nimport {Formik} from 'formik'\nimport * as Yup from 'yup';\nimport {Form,Input,Button, Checkbox, Typography} from 'antd'\nimport {UserOutlined, LockOutlined} from '@ant-design/icons';\nimport './Sections/LoginPage.css'\nimport '../../../index.css'\n\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n        .email('Email is invalid')\n        .required('이메일을 입력하세요'),\n        password: Yup.string()\n        .min(6, '비밀번호는 최소 6글자입니다.')\n        .required('비밀번호를 입력하세요'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n          .then(response => {\n            if (response.payload.loginSuccess) {\n              window.localStorage.setItem('userId', response.payload.userId);\n              if (rememberMe === true) {\n                window.localStorage.setItem('rememberMe', values.id);\n              } else {\n                localStorage.removeItem('rememberMe');\n              }\n              props.history.push(\"/\");\n            } else {\n              setFormErrorMessage('아이디나 비밀번호를 확인하세요')\n            }\n          })\n          .catch(err => {\n            setFormErrorMessage('아이디나 비밀번호를 확인하세요')\n            setTimeout(() => {\n              setFormErrorMessage(\"\")\n            }, 3000);\n          });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2} style={{color:'white'}}>로그인</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<UserOutlined type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"이메일을 입력하세요\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<LockOutlined type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"비밀번호를 입력하세요\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                {/*<Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>*/}\n                {/*<a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>*/}\n                {/*  forgot password*/}\n                {/*</a>*/}\n                <div>\n                  <Button type=\"default\" htmlType=\"submit\" className=\"login-form-button common_btn\" style={{minWidth: '100%',border:'none' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                   로그인\n                  </Button>\n                </div>\n               \n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n","import React, { useState } from 'react'\nimport {useDispatch} from 'react-redux'\nimport { registerUser } from '../../../_actions/user_action'\nimport {withRouter } from 'react-router-dom';\nimport moment from \"moment\";\nimport {Formik} from \"formik\";\nimport * as Yup from 'yup';\nimport '../../../index.css'\nimport './RegisterPage.css'\n\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n        .required('이름을 입력하세요'),\n        lastName: Yup.string()\n        .required('성을 입력하세요'),\n        email: Yup.string()\n        .email('Email is invalid')\n        .required('이메일을 입력하세요'),\n        password: Yup.string()\n        .min(6, '비밀번호는 최소 6글자입니다.')\n        .required('비밀번호를 입력하세요'),\n        confirmPassword: Yup.string()\n        .oneOf([Yup.ref('password'), null], '비밀번호가 일치해야합니다.')\n        .required('비밀번호를 확인하세요')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2 style={{color:'white'}}>회원가입</h2>\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n              <Form.Item required label=\"이름\" >\n                <Input\n                  id=\"name\"\n                  placeholder=\"이름\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"성\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"성\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"비밀번호\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"비밀번호\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"비밀번호 재입력\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"비밀번호 재입력\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button className=\"common_btn\" onClick={handleSubmit} type=\"default\" disabled={isSubmitting}>\n                  회원가입\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default withRouter(RegisterPage)\n","import React,{useEffect} from 'react';\nimport {useDispatch,useSelector} from 'react-redux'\nimport {auth} from '../_actions/user_action'\n\nexport default function(ComposedClass, reload, adminRoute = null) {\n  // null => 아무나 출입이 가능한 페이지\n  // true => 로그인한 유저만 출입이 가능한 페이지\n  // false => 로그인한 유저는 출입 불가능한 페이지\n  function AuthenticationCheck (props) {\n    \n    let user = useSelector(state => state.user);\n    const dispatch = useDispatch();\n  \n    useEffect(() => {\n    \n      dispatch(auth()).then(response => {\n        if (!response.payload.isAuth) {\n          if (reload) {\n            props.history.push('/login')\n          }\n        } else {\n          if (adminRoute && !response.payload.isAdmin) {\n            props.history.push('/')\n          }\n          else {\n            if (reload === false) {\n              props.history.push('/')\n            }\n          }\n        }\n      })\n    \n    }, [])\n  \n    return (\n      <ComposedClass {...props} user={user} />\n    )\n  }\n  \n  return AuthenticationCheck\n}\n","import React from 'react'\r\nimport { Row,Col } from 'antd'\r\n\r\nfunction SearchPage (props) {\r\n  return (\r\n    <div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchPage\r\n","import React from 'react';\nimport {Menu} from 'antd';\n\nfunction LeftMenu(props) {\n  return(\n    <Menu mode={props.mode}>\n      <Menu.Item key=\"mail\" className='customclass'>\n        <a href=\"/\">홈</a>\n      </Menu.Item>\n      <Menu.Item key=\"topten\" >\n        <a href=\"/topten\">베스트 콘텐츠</a>\n      </Menu.Item>\n      <Menu.Item key=\"favorite\">\n        <a href=\"/favorite\">내가 찜한 콘텐츠</a>\n      </Menu.Item>\n    </Menu>\n  )\n}\n\nexport default LeftMenu\n","import React, { useState, useEffect } from 'react'\nimport { API_KEY, API_URL, IMAGE_BASE_URL } from '../components/Config'\nimport axios from 'axios'\nimport { SearchOutlined } from '@ant-design/icons'\nimport '../static/sass/components/Search.scss'\nimport { Col, Input, Row } from 'antd'\nimport { useHistory } from 'react-router-dom'\nimport {Star} from '../static/star.png'\nconst SearchInput = () => {\n  \n  let history = useHistory()\n  \n  const [search, setSearch] = useState('')\n  const [lists, setLists] = useState(false)\n  const [movieLists, setMovieLists] = useState([])\n\n  \n    const url = `https://api.themoviedb.org/3/search/multi?api_key=${API_KEY}&language=kr&page=1&query=${search}`\n  \n  const fetch = async () => {\n    const response = await axios.get(url)\n    setMovieLists(response.data.results)\n  }\n\n\n  const onChange = (e) => {\n    setSearch(e.target.value)\n    fetch(setMovieLists)\n    return history.push('/searchpage')\n  }\n  \n  const clickSearch = () => {\n    setLists(!lists)\n  }\n\n  \n  return (\n    <div className={\"searchEle\"} style={{ padding: '7px 1px'}} >\n      \n      <div className=\"inputEle\" >\n        {lists &&\n        <Input className=\"searchText\"  style={{width:'90%'}} type=\"text\" value={search} onChange={onChange} placeholder=\"제목을 입력하세요\"/>\n        }\n        <a className=\"searchIcon\" style={{ color: '#ffffff' }} onClick={clickSearch}><SearchOutlined style={{fontSize:'18px'}}/></a>\n        \n      </div>\n      \n      <div className={'searchMovie' + (lists ? \"show\" : \"\")} style={{ width: '100%', position: 'fixed', top: '100px', left: '0%', }} >\n        <Row gutter={[24, 24]} style={{ width: '95%', margin: '0 auto', position: 'relative' }}>\n          \n          {movieLists && movieLists.map(movie => (\n            movie.poster_path ?\n            <Col span={3}>\n           \n              <img src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} style={{ width: '100%' }}/>\n              \n            </Col> : null\n          ))}\n          \n        </Row>\n      </div>\n      \n      \n    </div>\n  )\n}\n\nexport default SearchInput\n","import React, { useEffect, useState } from 'react'\r\nimport { BellOutlined } from '@ant-design/icons'\r\nimport { Popover, Button } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchNetFlix } from '../../../../_actions/user_action'\r\nimport '../../../../static/sass/components/Alarm.scss'\r\n\r\nfunction Alarm () {\r\n\r\n  const dispatch = useDispatch()\r\n  \r\n  useEffect(() => {\r\n    \r\n    dispatch(fetchNetFlix())\r\n    \r\n  }, [])\r\n  const newMovieData = useSelector(state => state.newmovie.newMovie, []) || []\r\n  console.log(  newMovieData,'newmobiedate')\r\n  \r\n  const Content = (\r\n    <div >\r\n      \r\n      {newMovieData.results && newMovieData.results.filter(person => person.vote_average > 6.5).map((movie,index) => (\r\n      <div className=\"alarmBox\" key={index}>\r\n        <img style={{ width: '112px',margin:'10px 0' }} src={`https://image.tmdb.org/t/p/original/${movie.backdrop_path}`}/>\r\n        <div className=\"alarmBoxTitleContainer\">\r\n        <p  className=\"alarmBoxTitle\">신규 콘텐츠</p>\r\n        <p className=\"alarmBoxTitle\" key={index}>{movie.title}</p>\r\n        </div>\r\n      </div>\r\n\r\n      ))}\r\n\r\n    </div>\r\n  );\r\n  \r\n  return(\r\n    \r\n    <>\r\n        <Popover placement=\"bottom\"  content={Content} trigger=\"click\">\r\n          <a className=\"searchLogo\" style={{color:'#ffffff',fontSize: '20px',fontWeight: '600'}} ><BellOutlined style={{fontSize:`18px`}}/></a>\r\n        </Popover>\r\n  </>)\r\n}\r\n\r\nexport default Alarm\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Menu,Avatar,Badge  } from 'antd';\nimport axios from 'axios';\nimport {SearchOutlined,BellOutlined,UserOutlined} from '@ant-design/icons'\nimport { USER_SERVER } from '../../../Config';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\nimport SearchInput from '../../../../container/SearchInput'\nimport Alarm from '../../NavBar/Sections/Alarm'\n\nfunction RightMenu(props) {\n  const user = useSelector(state => state.user)\n\n  const logoutHandler = () => {\n    axios.get('/api/users/logout')\n    .then(response => {\n      if (response.status === 200) {\n        props.history.push(\"/login\");\n      } else {\n        alert('Log Out Failed')\n      }\n    });\n  };\n\n  if (user.userData && !user.userData.isAuth) {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"search\">\n         \n          <SearchInput />\n          \n        </Menu.Item>\n        <Menu.Item key=\"kids\">\n          <a href=\"/\">키즈</a>\n        </Menu.Item>\n        <Menu.Item key=\"alaram\">\n          <Alarm />\n        </Menu.Item>\n        <Menu.Item key=\"signin\">\n          <a href=\"/login\">로그인</a>\n        </Menu.Item>\n        <Menu.Item key=\"signup\">\n          <a href=\"/register\">회원가입</a>\n        </Menu.Item>\n      </Menu>\n    )\n  } else {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"search\">\n   \n            <SearchInput />\n      \n        </Menu.Item>\n        <Menu.Item key=\"kids\">\n          <a href=\"/\">키즈</a>\n        </Menu.Item>\n        <Menu.Item key=\"alarm\">\n          <Alarm />\n        </Menu.Item>\n        <Menu.Item key=\"avatar\">\n          <a href=\"/\"><Avatar shape=\"square\"  style={{ color: '#ffffff', backgroundColor: '#cccccc' }}   icon={<UserOutlined />} /></a>\n        </Menu.Item>\n        <Menu.Item key=\"logout\">\n          <a onClick={logoutHandler}>로그아웃</a>\n        </Menu.Item>\n      </Menu>\n    )\n  }\n}\n\nexport default withRouter(RightMenu);\n\n","import React, { useState } from 'react'\nimport LeftMenu from './Sections/LeftMenu'\nimport RightMenu from './Sections/RightMenu'\nimport { Drawer, Button} from 'antd'\nimport {BarsOutlined} from '@ant-design/icons'\nimport '../../../static/sass/components/Navbar.scss'\n\nfunction NavBar () {\n  const [visible, setVisible] = useState(false)\n  const [scrolling, setScrolling] = useState(false);\n  \n  const showDrawer = () => {\n    setVisible(true)\n  }\n\n  const onClose = () => {\n    setVisible(false)\n  }\n \n  const handleScroll = () => {\n    if(window.scrollY === 0) {\n      setScrolling(false);\n    } else if (window.scrollY > 50) {\n      setScrolling(true);\n    }\n  }\n  \n  window.addEventListener('scroll', handleScroll);\n  return (\n    <nav className={\"menu \" + (scrolling ? \"black\" : \"\" )} style={{ position: 'fixed', zIndex: 5, width: '100%', margin:'0 auto' }} >\n      <div className=\"menu__logo\">\n        <a href=\"/\">NETFLIX</a>\n      </div>\n      <div className=\"menu__container\">\n        <div className=\"menu_left\">\n          <LeftMenu mode=\"horizontal\"/>\n        </div>\n        <div className=\"menu_right\">\n          <RightMenu mode=\"horizontal\"/>\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          <BarsOutlined type=\"align-right\"/>\n        </Button>\n        <Drawer\n          title=\"Logo\"\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n        >\n          {/*<LeftMenu mode=\"inline\"/>*/}\n          <RightMenu mode=\"inline\"/>\n        </Drawer>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar\n","import React, { useEffect, useState } from 'react'\r\nimport Axios from 'axios'\r\nimport { IMAGE_BASE_URL } from '../../Config'\r\nimport {Col,Row} from 'antd'\r\nconst FavoritePage = () => {\r\n  \r\n  const [Favorites,setFavorites] = useState([])\r\n  \r\n  useEffect(() => {\r\n    fetchFavoredMovie()\r\n  },[])\r\n  \r\n  const fetchFavoredMovie = () => {\r\n    Axios.get('/api/favorite/getFavoredMovie', {userFrom: localStorage.getItem('userId')})\r\n    .then(response => {\r\n      if(response.data.success){\r\n        setFavorites(response.data.favorites)\r\n         console.log(response.data.favorites,\"xcxcxc\")\r\n      } else {\r\n        alert(' 영화 정보를 가져오는데 실패')\r\n      }\r\n    })\r\n  }\r\n  \r\n  // const onClickDelete = (movieId, userFrom) => {\r\n  //   const variables = {\r\n  //     movieId,\r\n  //     userFrom\r\n  //   }\r\n  //\r\n  //   Axios.post('/api/favorite/removeFromFavorite', variables)\r\n  //   .then(response => {\r\n  //     if(response.data.success){\r\n  //       fetchFavoredMovie()\r\n  //     } else{\r\n  //       alert('리스트에서 지우는것 실패')\r\n  //     }\r\n  //   })\r\n  // }\r\n  \r\n  return (\r\n    \r\n    <Row gutter={[24, 24]} style={{width:'95%', margin:'0 auto',position:'relative',top:'100px'}}>\r\n      {Favorites && Favorites.map(favoritea => (\r\n        <Col span={3}>\r\n          <img src= {`https://image.tmdb.org/t/p/original/${favoritea.moviePost}`} style={{width:'100%'}}/>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default FavoritePage\r\n","import React from 'react';\nimport '../App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport LandingPage from './views/LandingPage/LandingPage'\nimport LoginPage from './views/LoginPage/LoginPage'\nimport RegisterPage from './views/RegisterPage/RegisterPage'\nimport Auth from '../hoc/auth'\nimport SearchPage from './views/SearchPage/SearchPage'\nimport NavBar from './views/NavBar/NavBar'\nimport FavoritePage from './views/FavoritePage/FavoritePage'\n\nfunction App() {\n  return (\n    <Router>\n      <NavBar />\n        <div style={{paddingTop: '1px', minHeight: 'calc(100vh -80px'}}>\n        <Switch>\n          <Route exact path=\"/\" component={Auth(LandingPage,null)} />\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n          <Route exact path=\"/searchpage\" component={Auth(SearchPage,null)}/>\n          <Route exact path=\"/favorite\" component={Auth(FavoritePage,null)}/>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { LOGIN_USER, REGISTER_USER, AUTH_USER,FETCH_TRENDING,FETCH_NETFLIX,FETCH_NEWMOVIE,FETCH_TOPRATED} from '../_actions/types'\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case LOGIN_USER:\n      return { ...state, loginSuccess: action.payload }\n      break\n    case REGISTER_USER:\n      return { ...state, register: action.payload }\n      break\n    case AUTH_USER:\n      return { ...state, userData: action.payload }\n      break\n    case FETCH_TRENDING:\n      return {\n        ...state,\n        trending:action.data\n      }\n      break\n    case FETCH_NETFLIX:\n      return {\n        ...state,\n        movies: action.data\n      }\n      break\n    case FETCH_NEWMOVIE:\n      return {\n        ...state,\n        newMovie: action.data\n      }\n      break\n    case FETCH_TOPRATED:\n      return {\n        ...state,\n        topmovies: action.data,\n      }\n    default:\n      return state\n  }\n}\n\n","import {combineReducers} from 'redux';\nimport user from './user_reducer';\nimport trendingReducer from './user_reducer'\nimport topratedReducer from './user_reducer'\nimport netflixReducer from './user_reducer'\nimport newmovieReducer from './user_reducer'\n\n//스토어가 있는데 리듀서가 여러가지 있어. 어떻게 state가 변하는것을 보여주고 값을 return 해주는것.\n\nconst rootReducer = combineReducers({\n  user:user,\n  trending: trendingReducer,\n  toprated: topratedReducer,\n  netflix: netflixReducer,\n  newmovie: newmovieReducer\n})\n\nexport default rootReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'antd/dist/antd.css';\n\nimport { Provider } from \"react-redux\";\n\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\nimport Reducer from './_reducers';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore)\n\n\nReactDOM.render(\n  <Provider store={createStoreWithMiddleware(\n    Reducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ &&\n    window.__REDUX_DEVTOOLS_EXTENSION__()\n  )}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n"],"sourceRoot":""}